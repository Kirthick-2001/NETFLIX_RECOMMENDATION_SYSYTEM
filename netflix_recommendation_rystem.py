# -*- coding: utf-8 -*-
"""Netflix_Recommendation_System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vVB1ftwYP8bhbV0POj3BuydrmUBB1gJx
"""

import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

df = pd.read_csv('/content/movies.csv')

df.head()

df.shape

df.isnull().sum().sum()

selected_features = ['genres','keywords','tagline','cast','director','overview']
print(selected_features)

for feature in selected_features:
  df[feature] = df[feature].fillna('')

combined_features = df['genres'] + ' ' + df['keywords'] + ' ' + df['tagline'] + ' ' + df['cast'] + ' ' + df['director'] + ' ' + df['overview']
print(combined_features)

df.isna().sum().sum()

vectorize = TfidfVectorizer()

feature_vectorize = vectorize.fit_transform(combined_features)
print(feature_vectorize)

similarity = cosine_similarity(feature_vectorize)

print(similarity)

similarity.shape

# All_Movie_Titles = df['title'].tolist()
# print(All_Movie_Titles)

# find_close_match = difflib.get_close_matches(movie_name,All_Movie_Titles)
# print(find_close_match)

# close_match = find_close_match[0]
# print(close_match)

# index_of_movie = df[df.title == close_match]['index'].values[0]
# print(index_of_movie)

# similarity_score = list(enumerate(similarity[index_of_movie]))
# print(similarity_score)

# sorted_similarity = sorted(similarity_score, key = lambda x:x[1], reverse = True)
# print(sorted_similarity)

# len(similarity_score)

"""# **OUTPUT**"""



movie_name = input("ENTER YOUR FAVORITE MOVIE NAME: ")

All_Movie_Titles = df['title'].tolist()

find_close_match = difflib.get_close_matches(movie_name,All_Movie_Titles)

if not find_close_match:
  print("MOVIE NOT FOUND! PLEASE ENTER A VALID MOVIE NAME")
else:
  close_match = find_close_match[0]

  index_of_movie = df[df.title == close_match]['index'].values[0]

  similarity_score = list(enumerate(similarity[index_of_movie]))

  sorted_similarity = sorted(similarity_score, key = lambda x:x[1], reverse = True)


  print("SUGGESTED MOVIE'S TO WATCH ARE:- ")

  i = 1

  for movie in sorted_similarity:
    index_of_movie = movie[0]
    title_from_index = df[df.index == index_of_movie]['title'].values[0]
    if (i<30):
      print(i, '.',title_from_index)
      i+=1

